{"name":"Meta","tagline":"C++ Metaprogramming Primivites and Pattern Implementations","body":"meta\r\n====\r\n\r\nC++ Metaprogramming Primivites and Pattern implementations.\r\n\r\nThis library is kept deliberately small, with no external dependencies (other\r\nthan CppUnit for testing).\r\n\r\n- for.h provides compile-time for loops\r\n- comparison.h provides compile-time comparators\r\n- noncopyable.h provides a non-copyable base class\r\n- mandatory.h provides code for enforcing checking of return types\r\n- byteorder.h provides compiler-/platform-independent versions of ntoh/hton for\r\n  integer types (including 64 bits)\r\n- pointers.h provides policies for shallow-copying/deep-copying pointer members.\r\n\r\nSome of this code started out as a mental exercise, so there's no guarantee for\r\nusefulness implied in providing them.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}